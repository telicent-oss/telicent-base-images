on:
  workflow_call:
    inputs:
      IMAGE-DESCRIPTOR:
        description: "Specify the image descriptor to build"
        required: true
        type: string
      TAG:
        description: "Specify the tag to build (must exist in the format v<major>.<minor>.<patch>)"
        required: true
        type: string

jobs:
  build-push-image:
      runs-on: ubuntu-latest
      outputs:
        image_name: ${{ steps.extract.outputs.image_name }}
        version: ${{ steps.extract.outputs.image_version }}
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          ref: {{ inputs.TAG }}
          fetch-depth: 0


        - name: Install Python and PIP
          run: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip

        - name: Install Cekit
          run: |
            python3 -m pip install --upgrade pip
            python3 -m pip install cekit

        - name: Generate Dockerfile
          run: |
            cekit --descriptor image-descriptors/${{ inputs.IMAGE-DESCRIPTOR }}.yaml build --dry-run docker 

        - name: Install yq
          run: |
            sudo add-apt-repository -y "ppa:rmescandon/yq"
            sudo apt update
            sudo apt install yq -y

        - name: Extract Image Version and Name
          id: extract
          run: |
            descriptor_path="target/image.yaml"

            # Extract version using yq
            current_version=$(yq eval '.version' "$descriptor_path" | sed 's/^[ \t]*//;s/[ \t]*$//')

            # Extract image name using yq
            image_name=$(yq eval '.labels[] | select(.name == "name") | .value' "$descriptor_path")

            echo "Extracted version: $current_version"
            echo "Extracted image name: $image_name"
            
            echo "image_version=$current_version" >> $GITHUB_OUTPUT
            echo "image_name=$image_name" >> $GITHUB_OUTPUT


        - name: Verify Correct Context
          run: |
            if [[ ! -f "target/image/Dockerfile" || ! -f "target/image.yaml" ]]; then
              echo "Error: Missing Dockerfile or image.yaml in target directory for image ${{ inputs.inputs.IMAGE-DESCRIPTOR }}"
              exit 1
            fi

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: "${{ secrets.DOCKER_USERNAME }}"
            password: "${{ secrets.DOCKER_PASSWORD }}"

        - name: Build and Push Image
          uses: docker/build-push-action@v5
          with:
            context: ./target/image
            file: ./target/image/Dockerfile
            platforms: linux/amd64,linux/arm64
            push: true
            tags: |
              "gnikolov95${{ steps.extract.outputs.image_name }}:latest"
              "gnikolov95${{ steps.extract.outputs.image_name }}:$${{ steps.extract.outputs.image_version }}"

  trivy-scan-image:
      needs: build-push-image
      uses: telicent-oss/shared-workflows/.github/workflows/trivy-image-scan.yml@main
      secrets: inherit
      with:
        IMAGE_REF: gnikolov95/${{ needs.build-push-image.outputs.image_name }}:${{ needs.build-push-image.outputs.version }}
        SCAN_NAME: ${{ needs.build-push-image.outputs.image_name }}-scan-trivy

  grype-scan-image:
    needs:
      needs: build-push-image
    uses: telicent-oss/shared-workflows/.github/workflows/grype-image-scan.yml@main
    secrets: inherit
    with:
      IMAGE_REF: gnikolov95/${{ needs.build-push-image.outputs.image_name }}:${{ needs.build-push-image.outputs.version }}
      SCAN_NAME: ${{ needs.build-push-image.outputs.image_name }}-scan-grype
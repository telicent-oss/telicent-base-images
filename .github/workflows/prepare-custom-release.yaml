name: Create or Update Release Branch

on:
  workflow_dispatch:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:

  changed-images:
    name: Detect Changes
    if: ${{ github.event.head_commit.author.name != 'github-actions[bot]'}}
    uses: ./.github/workflows/detect-changed-images.yaml
    with:
      TAG: {{ github.ref }}
  #&& !contains(github.event.head_commit.message, 'release')
  create-release-pr:
    needs: [changed-images]
    if: ${{ github.event.head_commit.author.name != 'github-actions[bot]'}}

    name: Create or Update Release PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Next Release Version
        id: determine-version
        run: |
            ./tag_version.sh 

      - name: Update Versions in Image Descriptors
        id: update-versions
        run: |
          echo "Updating image descriptors for version ${{ env.new_version }}."
          echo "Images that need updates: ${{ needs.changed-images.outputs.images }}"
          ./update_version.sh ${{ needs.changed-images.outputs.images }}

      - name: Append Changelog
        id: generate-changelog
        run: |
          ./generate_changelog.sh
          echo "Generated changelog....."

      - name: Commit Changes and Create Release Branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: prepare release ${{ env.new_version }}" || echo "No changes to commit."

      - name: Open or Update Release PR
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: prepare release ${{ env.new_version }}"
          base: dev
          branch: release/${{ env.new_version }}
          title: "chore: prepare release ${{ env.new_version }}"
          body: |
            ## Changes 
            ${{ env.new_changelog }}
          labels: "release: pending"

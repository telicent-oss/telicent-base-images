name: build-release-images

# Use this workflow to build and publish images, ideally we should find a way to
# be able to run the original one as it gives us access to more reusable workflows
# unfortunately GitHub actions become really tricky for more complex use cases.

on:
  workflow_dispatch:
    inputs:
      image_matrix:
        type: string
        description: |
          A list of images descriptors to be used as a matrix e.g telicent-base-java - from image descriptors.
          File extensions need to be omitted.
      tag:
        description: "Specify the tag to build (must exist in the format v<major>.<minor>.<patch>)"
        required: true
        type: string
  workflow_run:
    workflows: [ handle-release-pr ]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Workflow Run
        run: |
          echo "Event: ${{ toJson(github.event.workflow_run) }}"
  validate-tag:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.status == 'release_ready') || github.event_name == 'workflow_dispatch' }}
    outputs:
      tag: ${{ steps.validate.outputs.tag }}
    steps:
      - name: Validate Tag
        env:
          TAG_FROM_WORKFLOW_RUN: ${{ github.event.workflow_run.outputs.tag || '' }}
          TAG_FROM_INPUTS: ${{ github.event.inputs.tag || '' }}
          TAG_FROM_REF: ${{ github.ref_name || '' }}
        run: |
          echo "Checking tag source..."
          if [ -n "$TAG_FROM_WORKFLOW_RUN" ]; then
            TAG="$TAG_FROM_WORKFLOW_RUN"
            echo "Tag retrieved from workflow_run: $TAG"
          elif [ -n "$TAG_FROM_INPUTS" ]; then
            TAG="$TAG_FROM_INPUTS"
            echo "Tag retrieved from manual dispatch inputs: $TAG"
          elif [ -n "$TAG_FROM_REF" ]; then
            TAG="$TAG_FROM_REF"
            echo "Tag retrieved from git ref: $TAG"
          else
            echo "Error: No tag provided or detected."
            exit 1
          fi
          
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Validate Tag: $TAG"
           
          if [[ ! "$TAG" =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            echo "Error: The tag must be in the format v<major>.<minor>.<patch>, where each part is 1-3 digits."
            exit 1
          fi
          if ! git fetch --tags && git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Error: The specified tag ($TAG) does not exist in the repository."
            exit 1
          fi
          echo "Tag validated: $TAG"
          echo "tag=$TAG" >> $GITHUB_ENV

  detect-changed-images:
    needs: validate-tag
    uses: ./.github/workflows/detect-changed-images.yaml
    with:
      TAG_VERSION: ${{ needs.validate-tag.outputs.tag }}

  build-images-with-reusable-workflow:
    secrets: inherit
    needs:
      - validate-tag
      - detect-changed-images
    uses: ./.github/workflows/reusable-image-builder.yaml
    with:
      IMAGE-DESCRIPTORS: ${{ needs.detect-changed-images.outputs.images }}
      TAG: ${{ needs.validate-tag.outputs.tag }}

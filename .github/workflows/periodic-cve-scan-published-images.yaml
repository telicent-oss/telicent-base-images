name: periodic-cve-scan-published-images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1" # Every Monday at midnight

jobs:
  grype-scans:
    name: scan-images-with-grype
    uses: telicent-oss/shared-workflows/.github/workflows/grype-image-scan.yml@main
    strategy:
      matrix:
        image-artifact:
          - { image: "telicent/telicent-python3.12:latest", artifact: "telicent-python3.12" }
          - { image: "telicent/telicent-python3.11:latest", artifact: "telicent-python3.11" }
          - { image: "telicent/telicent-nginx1.27:latest", artifact: "telicent-nginx1.27" }
          - { image: "telicent/telicent-java21:latest", artifact: "telicent-java21" }
          - { image: "telicent/telicent-nodejs20:latest", artifact: "telicent-nodejs20" }
      fail-fast: false
    with:
      IMAGE_REF: ${{ matrix.image-artifact.image }}
      SCAN_NAME: ${{ matrix.image-artifact.artifact }}
    secrets: inherit

  trivy-scans:
    name: scan-images-with-trivy
    uses: telicent-oss/shared-workflows/.github/workflows/trivy-image-scan.yml@main
    strategy:
      matrix:
        image-artifact:
          - { image: "telicent/telicent-python3.12:latest", artifact: "telicent-python3.12" }
          - { image: "telicent/telicent-python3.11:latest", artifact: "telicent-python3.11" }
          - { image: "telicent/telicent-nginx1.27:latest", artifact: "telicent-nginx1.27" }
          - { image: "telicent/telicent-java21:latest", artifact: "telicent-java21" }
          - { image: "telicent/telicent-nodejs20:latest", artifact: "telicent-nodejs20" }
      fail-fast: false
    with:
      IMAGE_REF: ${{ matrix.image-artifact.image }}
      SCAN_NAME: ${{ matrix.image-artifact.artifact }}
    secrets: inherit

  notify-teams:
    name: Notify Teams on Failure
    runs-on: ubuntu-latest
    needs: [ grype-scans, trivy-scans ]
    if: failure()
    steps:
      - name: Send Notification to Teams
        env:
          TEAMS_WORKFLOW_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          build_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          error_image_url="https://github.com/telicent-oss/telicent-base-images/blob/main/.github/workflows/assets/error-transparent.png"
          cat > payload.json << EOF
          {
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "type": "AdaptiveCard",
                  "\$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "version": "1.4",
                  "body": [
                    {
                      "type": "Image",
                      "url": "https://github.com/telicent-oss/telicent-base-images/blob/main/.github/workflows/assets/error-transparent.png",
                      "altText": "Error Image",
                      "size": "medium",
                    },
                    {
                      "type": "TextBlock",
                      "size": "Large",
                      "weight": "Bolder",
                      "text": "Image Scan Failure",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "Workflow: Periodic CVE Scan",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "One or more jobs have failed during the image CVE scan workflow. Click the link below for details.",
                      "wrap": true
                    },
                    {
                      "type": "FactSet",
                      "facts": [
                        {
                          "title": "Repository:",
                          "value": "${{ github.repository }}"
                        },
                        {
                          "title": "Run ID:",
                          "value": "${{ github.run_id }}"
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": "Action.OpenUrl",
                      "title": "View Build",
                      "url": "$build_url"
                    }
                  ]
                }
              }
            ]
          }
          EOF
          
          curl -X POST -H "Content-Type: application/json" -d @payload.json "${{ env.TEAMS_WORKFLOW_URL }}"